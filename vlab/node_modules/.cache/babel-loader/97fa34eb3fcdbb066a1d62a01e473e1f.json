{"ast":null,"code":"var _jsxFileName = \"/home/likhitha/IIITH/SEM 1/Software System Development/JavaScript/VirtualLab/vlab/src/Components/FlipCards.jsx\";\nimport React, { Component } from \"react\";\nimport FlipCard from \"./Flipcard.jsx\";\n\nclass FlipCards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Questions: [{\n        id: \"1. According to the COCOMO model, a project can be categorized into\"\n      }, {\n        id: \"2. In Intermediate COCOMO model, Effort Adjustment Factor (EAF) is derived from the effort multipliers by\"\n      }, {\n        id: \"3. Project metrics are estimated during which phase?\"\n      }, {\n        id: \"4. According to Halsetad's metrics, program length is given by the \"\n      }, {\n        id: \"5. Complete COCOMO considers a software as a\"\n      }, {\n        id: \"6. Consider you are developing a web application, which would make use of a lot of web services provided by Facebook, Google, Flickr. Would it be wise to make estimates for this project using COCOMO?\"\n      }],\n      contents: [{\n        option1: \" 3 types\",\n        option2: \" 4 types \",\n        option3: \"  5 types \",\n        option4: \" No such categorization \"\n      }, {\n        option1: \" Adding them \",\n        option2: \" Multiplying them \",\n        option3: \" Taking their weighted average \",\n        option4: \" Considering their maximum \"\n      }, {\n        option1: \" Feasibility study \",\n        option2: \" Planning \",\n        option3: \" Design \",\n        option4: \" Development \"\n      }, {\n        option1: \" Sum of total number of operators and operands \",\n        option2: \" Sum of number of unique operators and operands \",\n        option3: \" Total number of operators \",\n        option4: \" Total number of operands \"\n      }, {\n        option1: \" Homogeneous system \",\n        option2: \" Heterogeneous system \",\n        option3: \"\",\n        option4: \"\"\n      }, {\n        option1: \" Yes, of course \",\n        option2: \" Not at all \",\n        option3: \"\",\n        option4: \"\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        marginBottom: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row flipcard d-flex justify-content-center\",\n      style: {\n        marginTop: \"4em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FlipCard, {\n      name: this.state.Questions[0].id,\n      content: this.state.contents[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row flipcard d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FlipCard, {\n      name: this.state.Questions[1].id,\n      content: this.state.contents[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row flipcard d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FlipCard, {\n      name: this.state.Questions[2].id,\n      content: this.state.contents[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default FlipCards;","map":{"version":3,"sources":["/home/likhitha/IIITH/SEM 1/Software System Development/JavaScript/VirtualLab/vlab/src/Components/FlipCards.jsx"],"names":["React","Component","FlipCard","FlipCards","state","Questions","id","contents","option1","option2","option3","option4","render","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FlipCard from \"./Flipcard.jsx\";\n\nclass FlipCards extends Component {\n  state = {\n    Questions: [\n      {\n        id:\n          \"1. According to the COCOMO model, a project can be categorized into\",\n      },\n      {\n        id:\n          \"2. In Intermediate COCOMO model, Effort Adjustment Factor (EAF) is derived from the effort multipliers by\",\n      },\n      { id: \"3. Project metrics are estimated during which phase?\" },\n      {\n        id:\n          \"4. According to Halsetad's metrics, program length is given by the \",\n      },\n      { id: \"5. Complete COCOMO considers a software as a\" },\n      {\n        id:\n          \"6. Consider you are developing a web application, which would make use of a lot of web services provided by Facebook, Google, Flickr. Would it be wise to make estimates for this project using COCOMO?\",\n      },\n    ],\n    contents: [\n      {\n        option1: \" 3 types\",\n        option2: \" 4 types \",\n        option3: \"  5 types \",\n        option4: \" No such categorization \",\n      },\n      {\n        option1: \" Adding them \",\n        option2: \" Multiplying them \",\n        option3: \" Taking their weighted average \",\n        option4: \" Considering their maximum \",\n      },\n      {\n        option1: \" Feasibility study \",\n        option2: \" Planning \",\n        option3: \" Design \",\n        option4: \" Development \",\n      },\n      {\n        option1: \" Sum of total number of operators and operands \",\n        option2: \" Sum of number of unique operators and operands \",\n        option3: \" Total number of operators \",\n        option4: \" Total number of operands \",\n      },\n      {\n        option1: \" Homogeneous system \",\n        option2: \" Heterogeneous system \",\n        option3: \"\",\n        option4: \"\",\n      },\n      {\n        option1: \" Yes, of course \",\n        option2: \" Not at all \",\n        option3: \"\",\n        option4: \"\",\n      },\n    ],\n  };\n  render() {\n    return (\n      <div className=\"container-fluid\" style={{ marginBottom: \"1%\" }}>\n        <div\n          className=\"row flipcard d-flex justify-content-center\"\n          style={{ marginTop: \"4em\" }}\n        >\n          <FlipCard\n            name={this.state.Questions[0].id}\n            content={this.state.contents[0]}\n          />\n        </div>\n        <div className=\"row flipcard d-flex justify-content-center\">\n          <FlipCard\n            name={this.state.Questions[1].id}\n            content={this.state.contents[1]}\n          />\n        </div>\n        <div className=\"row flipcard d-flex justify-content-center\">\n          <FlipCard\n            name={this.state.Questions[2].id}\n            content={this.state.contents[2]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FlipCards;\n"]},"metadata":{},"sourceType":"module"}